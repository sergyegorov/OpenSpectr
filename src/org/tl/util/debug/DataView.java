/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.tl.util.debug;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Graphics;
import javax.swing.JPanel;
import org.tl.ops.Common;

/**
 *
 * @author root
 */
public class DataView extends javax.swing.JPanel {

    /**
     * Creates new form DataView
     */
    public DataView() {
        initComponents();
        add(new DrawPanel(),BorderLayout.CENTER);
    }

    public double minData,maxData;
    public double[] Data;
    public double Mark;
    public void init(double[] data,double mark){
        Mark = mark;
        Data = new double[data.length];
        minData = data[0];
        maxData = minData;
        for(int i = 1;i<Data.length;i++){
            Data[i] = data[i];
            if(minData > Data[i])
                minData = Data[i];
            if(maxData < Data[i])
                maxData = Data[i];
        }
    }
    
    public class DrawPanel extends JPanel{
        public DrawPanel(){
            super();
            setPreferredSize(new Dimension(640,400));
        }
        
        @Override
        public void paint(Graphics gr){
            try{
                int w = getWidth();
                int h = getHeight();
                gr.setColor(Color.white);
                gr.fillRect(0, 0, w, h);
                
                if(w == 0 || h == 0)
                    return;
                
                double kx = w / (double)Data.length;
                double ky = (h-10) / (maxData - minData);
                gr.setColor(Color.black);
                int y0 = h - (int)(ky * (0 - minData)) + 5;
                gr.drawString(""+maxData, 10, 20);
                gr.drawString(""+minData, 10, 40);
                gr.drawLine(0, h, h, h);
                gr.setColor(Color.blue);
                int px = -10000;
                int py = h/2;
                for(int i = 0;i<Data.length;i++){
                    int x = (int)(kx * i);
                    int y = h - (int)(ky * (Data[i] - minData)) + 5;
                    gr.drawLine(px, py, x, y);
                    px = x;
                    py = y;
                }
                
                int x = (int)(kx * Mark);
                gr.setColor(Color.red);
                gr.drawLine(x, 0, x, h);
            } catch(Exception ex){
                Common.Log.exception("Draw debug data exception", ex);
            }
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setLayout(new java.awt.BorderLayout());
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
