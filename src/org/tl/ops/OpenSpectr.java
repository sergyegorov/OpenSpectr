package org.tl.ops;

import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.File;
import java.io.IOException;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import org.tl.ops.comp.LyPatternSelector;
import org.tl.ops.comp.SetupDialog;

/*
 * To change this license hea*--der, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author root
 */
public class OpenSpectr extends javax.swing.JFrame {
    public static StatusBarDriver StatusBarDriver;
    /**
     * Creates new form OpenSpectr
     */
    public OpenSpectr() throws SQLException {
        initComponents();
        setExtendedState( getExtendedState()|JFrame.MAXIMIZED_BOTH );
        StatusBarDriver = new StatusBarDriver(panStatusBar);
        addWindowListener(new WindowAdapter() {
        @Override
        public void windowClosing(WindowEvent e) {
            try {
                    Common.Log.msg("Exit...");
                    Common.Log.close();
            } catch (Exception ex) {
                Logger.getLogger(OpenSpectr.class.getName()).log(Level.SEVERE, null, ex);
            }
        }});//*/
        Common.Setup = new SetupDialog(this, true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panStatusBar = new javax.swing.JPanel();
        panRoot = new javax.swing.JPanel();
        jSplitPane1 = new javax.swing.JSplitPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();
        jCheckBox1 = new javax.swing.JCheckBox();
        jCheckBox2 = new javax.swing.JCheckBox();
        mbarMain = new javax.swing.JMenuBar();
        mcMeasuring = new javax.swing.JMenu();
        mcChecking = new javax.swing.JMenuItem();
        mcAnalize = new javax.swing.JMenu();
        mrSetup = new javax.swing.JMenu();
        mrCommon = new javax.swing.JMenuItem();
        mrLyMarkers = new javax.swing.JMenuItem();
        mrDebug = new javax.swing.JMenu();
        mrDebugMeasuring = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        panStatusBar.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        javax.swing.GroupLayout panStatusBarLayout = new javax.swing.GroupLayout(panStatusBar);
        panStatusBar.setLayout(panStatusBarLayout);
        panStatusBarLayout.setHorizontalGroup(
            panStatusBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        panStatusBarLayout.setVerticalGroup(
            panStatusBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 24, Short.MAX_VALUE)
        );

        jSplitPane1.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);
        jSplitPane1.setResizeWeight(0.8);

        jPanel1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel1.setText("Main matrix");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jCheckBox1.setText("Unknown");

        jCheckBox2.setText("Standardts");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jCheckBox1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jCheckBox2)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(jCheckBox1)
                    .addComponent(jCheckBox2))
                .addGap(0, 33, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout panRootLayout = new javax.swing.GroupLayout(panRoot);
        panRoot.setLayout(panRootLayout);
        panRootLayout.setHorizontalGroup(
            panRootLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jSplitPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 655, Short.MAX_VALUE)
        );
        panRootLayout.setVerticalGroup(
            panRootLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panRootLayout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSplitPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 249, Short.MAX_VALUE))
        );

        mcMeasuring.setText("Measuring");

        mcChecking.setText("Cheking...");
        mcMeasuring.add(mcChecking);

        mbarMain.add(mcMeasuring);

        mcAnalize.setText("Analize");
        mbarMain.add(mcAnalize);

        mrSetup.setText("Setup");

        mrCommon.setText("Common");
        mrCommon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mrCommonActionPerformed(evt);
            }
        });
        mrSetup.add(mrCommon);

        mrLyMarkers.setText("Ly Markers");
        mrLyMarkers.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mrLyMarkersActionPerformed(evt);
            }
        });
        mrSetup.add(mrLyMarkers);

        mbarMain.add(mrSetup);

        mrDebug.setText("Debug");

        mrDebugMeasuring.setText("Debug measuring");
        mrDebugMeasuring.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mrDebugMeasuringActionPerformed(evt);
            }
        });
        mrDebug.add(mrDebugMeasuring);

        mbarMain.add(mrDebug);

        setJMenuBar(mbarMain);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panStatusBar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(panRoot, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(panRoot, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panStatusBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void mrCommonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mrCommonActionPerformed
        try{
            Common.Setup.setVisible(true);
        }catch(Exception ex){
            Common.Log.exception("Common setup show exception", ex);
        }
    }//GEN-LAST:event_mrCommonActionPerformed

    private void mrDebugMeasuringActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mrDebugMeasuringActionPerformed
        try{
            Common.Setup.getDevice().measuringWithPreview(this);
        }catch(Exception ex){
            Common.Log.exception("Common setup show exception", ex);
        }
    }//GEN-LAST:event_mrDebugMeasuringActionPerformed

    private void mrLyMarkersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mrLyMarkersActionPerformed
        try{
            LyPatternSelector ps = new LyPatternSelector(this,true);
            ps.setVisible(true);
        }catch(Exception ex){
            Common.Log.exception("Common setup show exception", ex);
        }
    }//GEN-LAST:event_mrLyMarkersActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        try {
            Common.init();
        } catch (Exception e) {
            System.err.println("ERROR: failed to load HSQLDB JDBC driver.");
            e.printStackTrace();
            return;
        }
        
        try{
            Common.Log = new org.tl.log.TLLog("MainLog");
            Common.Log.msg("Programm started...");
        }
        catch(Exception ex){
            System.err.println("ERROR: Can't open log...");
            ex.printStackTrace();
            return;
        }
        
        /*try{
            Object o = null;
            o.toString();
        } catch(Exception ex){
            Log.exception("test", ex);
        }//*/
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(OpenSpectr.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(OpenSpectr.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(OpenSpectr.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(OpenSpectr.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Login login;
                try {
                    login = new Login(true);
                } catch (IOException ex) {
                    Logger.getLogger(OpenSpectr.class.getName()).log(Level.SEVERE, null, ex);
                    return;
                }
                login.setVisible(true);
                if(login.isOk() == false){
                    try {
                        Common.Log.msg("Enterring skipped...");
                        Common.Log.close();
                    } catch (Exception ex) {
                        Logger.getLogger(OpenSpectr.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    return;
                }
                try {
                    new OpenSpectr().setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(OpenSpectr.class.getName()).log(Level.SEVERE, null, ex);
                    return;
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JMenuBar mbarMain;
    private javax.swing.JMenu mcAnalize;
    private javax.swing.JMenuItem mcChecking;
    private javax.swing.JMenu mcMeasuring;
    private javax.swing.JMenuItem mrCommon;
    private javax.swing.JMenu mrDebug;
    private javax.swing.JMenuItem mrDebugMeasuring;
    private javax.swing.JMenuItem mrLyMarkers;
    private javax.swing.JMenu mrSetup;
    private javax.swing.JPanel panRoot;
    private javax.swing.JPanel panStatusBar;
    // End of variables declaration//GEN-END:variables
}
